apiVersion: apps/v1
kind: Deployment
metadata:
  name: orion-api-deployment
spec:
  selector:
    matchLabels:
      run: orion-api-pod
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: orion-api-pod
    spec:
      volumes:
        - name: my-data
          persistentVolumeClaim:
            claimName: my-pvc
      imagePullSecrets:
          - name: gcr-secret1
      containers:
      - image: gcr.io/busviz/orion:latest
        imagePullPolicy: Always
        name: orion-api
        resources:
          requests:
            cpu: 0.35
            memory: 0.5Gi
        env:
          - name: ORION_DATABASE_PATH
            value: /data
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: aws-credentials
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aws-credentials
                key: aws_secret_access_key
          - name: IS_SERVER
            value: "true"
        volumeMounts:
          - name: my-data
            # Where the container expects to find the SQLITE file (see ORION_DATABASE_PATH)
            mountPath: /data
      - image: gcr.io/busviz/orion:latest
        imagePullPolicy: Always
        name: orion-worker
        resources:
          requests:
            cpu: 0.35
            memory: 0.5Gi
        env:
          - name: ORION_DATABASE_PATH
            value: /data
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: aws-credentials
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aws-credentials
                key: aws_secret_access_key
          - name: IS_SERVER
            value: "false"
        volumeMounts:
          - name: my-data
            mountPath: /data

